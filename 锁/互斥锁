互斥:通过同一时间只有一个线程能够访问临界资源来保证数据操作安全性,同步:通过条件的判断,实现对临界资源访问的时序合理性
互斥的实现：互斥锁
就是一个有两种状态标记的计数器
所有线程访问一个临界资源时都要先经过互斥锁，当一个线程访问临界资源时就置成不可访问状态，挂起（将pcb置为可中断休眠状态）想访问的线程，正在访问线程退出时再解锁，唤醒其他等待线程
pthread_mutex_t 互斥锁变量类型
pthread_mutexattr_t 互斥锁属性变量（通常置空）
pthread_mutex_init(pthread_mutex_t *mutex, pthread_mutexattr_t *attr)   //互斥锁初始化
pthread_mutex_lock(pthread_mutex_t *mutex)  //加锁
pthread_mutex_unlock(pthread_mutex t *mutex)  //解锁
pthread_mutex_destroy(pthread_mutex_t *mutex);  //销毁锁
