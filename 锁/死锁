死锁：
多个线程对锁资源进行争抢访问,但是因为,推进顺序不当,导致亘相等待,造成程序流程无法继续推进,这就是死锁的产生
出现在一个临界资源有多个锁的情况，加锁时其中一个锁加了一个线程，另一个锁又加了另一个线程，只有两个锁都拿到的情况下才能访问到临界资源，此时就都请求不到锁（哲学家吃饭例子）

1.互斥条件--锁同一时间只有一个线程能够获取
2,不可剥夺条件-加的锁只有我能解锁
3.请求与保持条件--拿着A锁请求B,若请求不到,则一直保持A的所有不释放
预防:破坏必要条件
避免：银行家算法
